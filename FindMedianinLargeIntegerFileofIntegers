
public class FindMedianinLargeIntegerFileofIntegers {
	public double findMedian(int[] nums) {
		int len = 0;
		for(int num:nums) {
			len++;
		}
		if(len%2==1) {
			return (double) search(nums,len/2,Integer.MIN_VALUE,Integer.MAX_VALUE);
		}
		else {
			return (double) (search(nums,len/2,Integer.MIN_VALUE,Integer.MAX_VALUE)
					+search(nums,len/2+1,Integer.MIN_VALUE,Integer.MAX_VALUE))/2;
		}
	}
	
	private long search(int[] nums, int k, long min, long max) {
		if(min>=max)return min;
		long res = min;
		long guess = min+(max-min)/2;
		int count = 0;
		for(int num:nums) {
			if(num<=guess) {
				count++;
				res=Math.max(res, num);
			}
		}
		if(count==k) {
			return res;
		}
		else if(count<k) {
			return search(nums,k,Math.max(res+1, guess),max);
		}
		else {
			return search(nums,k,min,res);
		}
	}
}
